{"version":3,"file":"static/js/632.032cff81.chunk.js","mappings":"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","sources":["webpack://best-friend-project/./src/components/Main/Article/Profile/ProfileData/ProfileData.module.scss?2cb0","components/Main/Article/Profile/ProfileData/ProfileData.jsx","webpack://best-friend-project/./src/components/Main/Article/Profile/Profile.module.scss?0cd5","webpack://best-friend-project/./src/components/Main/Article/Profile/ProfileDataForm/ProfileDataForm.module.scss?468f","components/Main/Article/Profile/ProfileDataForm/ProfileDataForm.jsx","components/Main/Article/Profile/Profile.jsx","components/Main/Article/Profile/ProfileContainer.jsx","webpack://best-friend-project/./src/components/Main/Article/Newpost/Newpost.module.scss?27ab","components/Main/Article/Newpost/Newpost.jsx","webpack://best-friend-project/./src/components/Main/Article/Posts/Posts.module.scss?1df8","components/Main/Article/Posts/Posts.jsx","components/Main/Article/Posts/PostsContainer.jsx","webpack://best-friend-project/./src/components/Main/Article/Article.module.scss?1d67","components/Main/Article/Article.jsx","hoc/withAuthRedirect.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dataContainer\":\"ProfileData_dataContainer__ndqq6\",\"dataTitle\":\"ProfileData_dataTitle__nwNh1\",\"dataDescription\":\"ProfileData_dataDescription__ZroP8\",\"contact\":\"ProfileData_contact__mh9fb\",\"editButton\":\"ProfileData_editButton__GIDqd\"};","import React from 'react';\r\n\r\nimport cl from './ProfileData.module.scss';\r\n\r\nconst ProfileData = ({ profile, isOwner, goToSettingMode }) => {\r\n\r\n    return (\r\n        <div className={cl.dataContainer}>\r\n            <div>\r\n                <b><span className={cl.dataTitle}>Full name: </span></b><span className={cl.dataDescription}>{profile.fullName}</span>\r\n            </div>\r\n            <div>\r\n                <b><span className={cl.dataTitle}>About me: </span></b><span className={cl.dataDescription}>{profile.aboutMe}</span>\r\n            </div>\r\n            <div>\r\n                <b><span className={cl.dataTitle}>My skills: </span></b><span className={cl.dataDescription}>{profile.lookingForAJobDescription}</span>\r\n            </div>\r\n            <div className={cl.contactsWrapper}>\r\n                <b><span className={cl.dataTitle}>Contacts: </span></b><span>{Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}</span>\r\n            </div>\r\n            {isOwner &&\r\n                <div className={cl.editButtonWrapper}>\r\n                    <button className={cl.editButton} onClick={goToSettingMode}>Edit</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileData;\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={cl.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__H9cYw\",\"avatarImg\":\"Profile_avatarImg__rdo4y\",\"avatarContainer\":\"Profile_avatarContainer__jXpog\",\"inputMainPhoto\":\"Profile_inputMainPhoto__lgT9I\",\"inputWrapper\":\"Profile_inputWrapper__OKah1\",\"label\":\"Profile_label__-mj2j\",\"mainWrapper\":\"Profile_mainWrapper__gnBGi\"};","// extracted by mini-css-extract-plugin\nexport default {\"dataContainer\":\"ProfileDataForm_dataContainer__nKZfw\",\"fieldWrapper\":\"ProfileDataForm_fieldWrapper__IFkhx\",\"field\":\"ProfileDataForm_field__M-EbK\",\"saveEditButton\":\"ProfileDataForm_saveEditButton__fSd8g\",\"contact\":\"ProfileDataForm_contact__LamCG\",\"formSummaryError\":\"ProfileDataForm_formSummaryError__fGd+0\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport cl from './ProfileDataForm.module.scss';\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={cl.dataContainer}>\r\n            <div className={cl.fieldWrapper}>\r\n                <b>Full name: </b><Field className={cl.field} placeholder='Full name' type='text' name='fullName' component={'input'}></Field>\r\n            </div>\r\n            <div className={cl.fieldWrapper}>\r\n                <b>About me: </b><Field className={cl.field} placeholder='Tell me about yourself' type='text' name='aboutMe' component={'textarea'}></Field>\r\n            </div>\r\n            <div className={cl.fieldWrapper}>\r\n                <b>My skills: </b><Field className={cl.field} placeholder='Tell me about yourself' type='text' name='lookingForAJobDescription' component={'textarea'}></Field>\r\n            </div>\r\n            <div className={cl.fieldWrapper}>\r\n                <b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div className={cl.contact} key={key}>\r\n                            <b>{key}: </b> <Field className={cl.field} key={key} placeholder={key} name={'contacts.' + key} component={'input'}></Field>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div >\r\n            {error && <p className={cl.formSummaryError}>{error}</p>}\r\n            <div>\r\n                <button className={cl.saveEditButton}>Save Edit</button>\r\n            </div>\r\n            <p>* contact fields must be valid</p>\r\n            <p>for example https://facebook.com</p>\r\n        </form >\r\n    );\r\n};\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n    form: 'newProfileForm'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux;\r\n","import React, { useState } from 'react';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport cl from './Profile.module.scss';\r\nimport userPhoto from '../../../../assets/img/userAva.png';\r\nimport ProfileDataFormRedux from './ProfileDataForm/ProfileDataForm';\r\n\r\nconst Profile = (props) => {\r\n\r\n    const [settingMode, setSettingMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const goToSettingMode = () => {\r\n        setSettingMode(true);\r\n    };\r\n\r\n    const onSubmit = async (formData) => {\r\n        await props.saveNewProfile(formData);\r\n        setSettingMode(false);\r\n    };\r\n\r\n    return (\r\n        <section className={cl.profile}>\r\n            <div className={cl.avatarContainer}>\r\n                <img\r\n                    src={props.profile.photos.large !== null\r\n                        ? props.profile.photos.large\r\n                        : userPhoto}\r\n                    className={cl.avatarImg}\r\n                    alt=\"avatar\"\r\n                />\r\n                {props.isOwner && (\r\n                    <div className={cl.inputWrapper}>\r\n                        <label className={cl.label}>\r\n                            <input className={cl.inputMainPhoto} type='file' onChange={onMainPhotoSelected} />\r\n                            Select a photo\r\n                        </label>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={cl.mainWrapper}>\r\n                {settingMode\r\n                    ? <ProfileDataFormRedux initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={props.profile} isOwner={props.isOwner} goToSettingMode={goToSettingMode} />}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setUserProfile, getProfileThunkAC, savePhoto, saveNewProfile\r\n} from '../../../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getProfileAPI } from '../../../../api/api';\r\nimport withAuthRedirect from '../../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        getProfileAPI(userId, this.props.setUserProfile)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            });\r\n\r\n        getProfileThunkAC(userId, this.props.setUserProfile, getProfileAPI);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        setUserProfile: (userId) => {\r\n            dispatch(setUserProfile(userId));\r\n        },\r\n        getProfileThunkAC: (userId, getProfileAPI) => {\r\n            dispatch(getProfileThunkAC(userId, getProfileAPI));\r\n        },\r\n        savePhoto: (file) => {\r\n            dispatch(savePhoto(file));\r\n        },\r\n        saveNewProfile: (profile) => {\r\n            dispatch(saveNewProfile(profile))\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Newpost_text__-dpSd\"};","import React from 'react';\r\nimport cl from './Newpost.module.scss';\r\n\r\nconst Newpost = (props) => {\r\n    return (\r\n        <div className={cl.post}>\r\n            <div className={cl.text}>{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Newpost;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__oxQYE\",\"title\":\"Posts_title__LXWat\",\"textarea\":\"Posts_textarea__PQRcC\",\"submitWrapper\":\"Posts_submitWrapper__pB8IV\",\"submit\":\"Posts_submit__jx3We\",\"newPostWrapper\":\"Posts_newPostWrapper__9Q0RL\",\"form\":\"Posts_form__3mtFV\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../../../utils/validators/validators';\r\nimport Newpost from '../Newpost/Newpost';\r\nimport cl from './Posts.module.scss';\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n/* const minLength1 = minLengthCreator(1); */\r\n\r\nconst Posts = (props) => {\r\n\r\n    let postElements = props.posts.postData.map(p => {\r\n        return <Newpost key={p.id} message={p.message} id={p.id} />;\r\n    });\r\n\r\n    let onAddPost = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <section className={cl.posts}>\r\n            <p className={cl.title}>My posts</p>\r\n            <PostFormRedux onSubmit={onAddPost} />\r\n            <div className={cl.newPostWrapper}>{postElements}</div>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={cl.form}>\r\n            <Field component={'textarea'}\r\n                name={'newPostText'}\r\n                className={cl.textarea}\r\n                placeholder='Enter your news'\r\n                validate={[required, maxLength300/* , minLength1 */]} />\r\n            <div className={cl.submitWrapper}>\r\n                <button className={cl.submit}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostFormRedux = reduxForm({\r\n    form: 'addNewPostText'\r\n})(PostForm)\r\n\r\n\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../../../redux/profile-reducer';\r\nimport Posts from './Posts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    };\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"acticle\":\"Article_acticle__LulWv\"};","import React from 'react';\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport cl from '../Article/Article.module.scss';\r\n\r\n\r\n\r\nconst Article = () => {\r\n\r\n    return (\r\n        <article className={cl.acticle}>\r\n            <ProfileContainer />\r\n            <PostsContainer />\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default Article;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to='/login/' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length >= maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length <= minLength) {\r\n        return `Min length is ${minLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n};"],"names":["_ref","profile","isOwner","goToSettingMode","_jsxs","className","cl","children","_jsx","fullName","aboutMe","lookingForAJobDescription","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","onClick","_ref2","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","type","name","component","props","_useState","useState","_useState2","_slicedToArray","settingMode","setSettingMode","Preloader","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","saveNewProfile","stop","_x","apply","arguments","src","photos","large","userPhoto","alt","onChange","e","target","files","length","savePhoto","ProfileDataFormRedux","initialValues","ProfileData","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","value","_this","userId","this","match","params","authorizedUserId","getProfileAPI","setUserProfile","then","response","data","getProfileThunkAC","refreshProfile","prevProps","Profile","_objectSpread","React","compose","connect","state","profilePage","auth","isAuth","dispatch","file","withRouter","withAuthRedirect","message","maxLength300","maxLengthCreator","PostFormRedux","validate","required","postElements","posts","postData","p","Newpost","id","values","sendMessage","newPostText","addPost","Posts","PostsContainer","mapStateToPropsForRedirect","Component","RedirectComponent","Redirect","to","maxLength","concat"],"sourceRoot":""}