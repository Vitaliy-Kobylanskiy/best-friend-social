{"version":3,"file":"static/js/197.e7eef6b0.chunk.js","mappings":"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","sources":["webpack://best-friend-project/./src/components/Main/Dialogs/Input/Input.module.scss?c2a3","components/Main/Dialogs/Input/Input.jsx","webpack://best-friend-project/./src/components/Main/Dialogs/DialogsList/Chat/Chat.module.scss?1abd","components/Main/Dialogs/DialogsList/Chat/Chat.jsx","webpack://best-friend-project/./src/components/Main/Dialogs/DialogsList/DialogsList.module.scss?05a1","components/Main/Dialogs/DialogsList/DialogsList.jsx","components/Main/Dialogs/DialogsList/DialogsListContainer.jsx","webpack://best-friend-project/./src/components/Main/Dialogs/MessageList/NewMessageArea/NewMessageArea.module.scss?dae4","webpack://best-friend-project/./src/components/Main/Dialogs/MessageList/MessageItem/MessageItem.module.scss?ff69","components/Main/Dialogs/MessageList/MessageItem/MessageItem.jsx","components/Main/Dialogs/MessageList/NewMessageArea/NewMessageArea.jsx","components/Main/Dialogs/MessageList/NewMessageArea/NewMessageAreaContainer.jsx","webpack://best-friend-project/./src/components/Main/Dialogs/MessageList/MessageList.module.scss?3d3d","components/Main/Dialogs/MessageList/MessageList.jsx","webpack://best-friend-project/./src/components/Main/Dialogs/Dialogs.module.scss?adb6","components/Main/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__kGuee\",\"inputWrapper\":\"Input_inputWrapper__QJV3H\"};","import React from 'react';\r\nimport cl from './Input.module.scss';\r\n\r\nconst Input = () => {\r\n    return (\r\n        <div className={cl.inputWrapper}>\r\n            <input className={cl.input} placeholder='Search' type=\"text\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nexport default {\"userItem\":\"Chat_userItem__hr26z\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cl from './Chat.module.scss';\r\n\r\nconst Chat = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <NavLink to={path} className={cl.userItem}>{props.name}</NavLink>\r\n    );\r\n};\r\n\r\nexport default Chat;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"DialogsList_users__s99O4\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom';\r\nimport Chat from './Chat/Chat';\r\nimport cl from './DialogsList.module.scss';\r\n\r\nconst DialogsList = (props) => {\r\n\r\n    let allDialogs = props.allDialogs;\r\n\r\n    let dialogsElements = allDialogs.map(d => {\r\n        return <Chat key={d.id} name={d.name} id={d.id} />;\r\n    });\r\n\r\n    return (\r\n        <div className={cl.users}>\r\n            {dialogsElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsList;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../../../../hoc/withAuthRedirect';\r\nimport DialogsList from './DialogsList';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        allDialogs: state.messagePage.dialogs\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(DialogsList);","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewMessageArea_form__sLfuW\",\"textarea\":\"NewMessageArea_textarea__cs1pC\",\"button\":\"NewMessageArea_button__hGZsI\",\"elementsWrapper\":\"NewMessageArea_elementsWrapper__ZN3zd\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"MessageItem_messageItem__JMgIv\"};","import React from 'react';\r\nimport cl from './MessageItem.module.scss';\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    return (\r\n        <div className={cl.messageItem}>{props.text}</div>\r\n    );\r\n};\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport cl from './NewMessageArea.module.scss';\r\nimport MessageItem from '../MessageItem/MessageItem';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst NewMessageArea = (props) => {\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    let messageElements = props.allMessages.map(m => {\r\n        return <MessageItem key={m.id} text={m.message} id={m.id} />;\r\n    });\r\n\r\n    return (\r\n        <div className={cl.areaWrapper}>\r\n            <div className={cl.elementsWrapper}>{messageElements}</div>\r\n            <MessageFormRedux onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={cl.form}>\r\n            <Field component={'textarea'}\r\n                name={'newMessageBody'}\r\n                className={cl.textarea}\r\n                placeholder='Enter your message'\r\n                validate={[required, maxLength300]} />\r\n            <button className={cl.button}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MessageFormRedux = reduxForm({\r\n    form: 'addNewMessageForm'\r\n})(MessageForm)\r\n\r\n\r\nexport default NewMessageArea;","import NewMessageArea from './NewMessageArea';\r\nimport { sendMessage } from '../../../../../redux/messages-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        allMessages: state.messagePage.messages\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\nconst NewMessageAreaContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessageArea);\r\n\r\nexport default NewMessageAreaContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"MessageList_messages__mxIdE\"};","import React from 'react';\r\nimport NewMessageAreaContainer from './NewMessageArea/NewMessageAreaContainer';\r\nimport cl from './MessageList.module.scss';\r\n\r\n\r\nconst MessageList = () => {\r\n\r\n    return (\r\n        <div className={cl.messages}>\r\n            <NewMessageAreaContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageList;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__1SDHM\",\"contentWrapper\":\"Dialogs_contentWrapper__FyeOn\"};","import React from 'react';\r\nimport Input from './Input/Input';\r\nimport DialogsListContainer from './DialogsList/DialogsListContainer';\r\nimport MessageList from './MessageList/MessageList';\r\nimport cl from './Dialogs.module.scss';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={cl.wrapper}>\r\n            <Input />\r\n            <div className={cl.contentWrapper}>\r\n                <DialogsListContainer />\r\n                <MessageList />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to='/login/' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;","export const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length >= maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length <= minLength) {\r\n        return `Min length is ${minLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n};"],"names":["_jsx","className","cl","children","placeholder","type","props","path","id","NavLink","to","name","dialogsElements","allDialogs","map","d","Chat","compose","connect","state","messagePage","dialogs","withAuthRedirect","DialogsList","text","maxLength300","maxLengthCreator","MessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","validate","required","messageElements","allMessages","m","MessageItem","message","values","sendMessage","newMessageBody","messages","dispatch","NewMessageArea","NewMessageAreaContainer","Input","DialogsListContainer","MessageList","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","Redirect","_objectSpread","React","maxLength","length","concat"],"sourceRoot":""}